---json
{
    "description": "The carrousel component permits to layout and to scroll components horizontally.",
    "page_id": "jp4qhbhgdeg3pxkzvzry3",
    "title": "How to create a carrousel layout"
}
---
====== ComboStrap - Carrousel Layout ======


===== About =====
A carrousel is a layout component where the user can cycle through elements in a horizontal way.


To cycle through the elements, you can use:
  * on a mobile, the swipe hand gesture
  * on a desktop, the mouse or the arrow and bullet control elements.


Because a carrousel is also known as a slideshow, the elements of a carrousel are generally called ''slides''.
===== Example =====

==== Image Gallery ====

This example shows you a carrousel of [[docs:content:image|image]] known also as a image gallery.

<webcode name="Default" frameborder="0" >
  * The cards:
<code dw>
<carrousel>
{{ :woman-yoga-sunset.jpg?0x600&ratio=16:9 |}}
{{ :page_speed_performance.png?0x600&ratio=16:9 |}}
{{ :undraw_content_creator.svg?0x600&ratio=16:9 |}}
</carrousel>
</code>
  * The output:
</webcode>

==== Carrousel dynamically created with the iterator ====

With the [[docs:templating:iterator|template iterator]], you can create dynamically the children that you want to show.

Example with all pages that are in the layout path.
<webcode name="Default" frameborder="0">
  * The iterator with the data node that uses the [[docs:templating:sql|page sql]] to select the pages
<code dw>
<iterator>
    <data>select where path like "%layout%" order by title asc limit 10</data>

    <heading h4 text-align="center" spacing="mb-3"> The pages talking about layout in ComboStrap </heading>
    <carrousel element-width="250px">
        <template>
            <card clickable>
            <page-image path="$path" ratio="16:9"/>
            == $title ==
            <itext color="muted"><date format="%h %d - %H:%M">$date_modified</date></itext>

            <pipeline>"$description" | head(200,"...")</pipeline> [[$path| ]]
            </card>
        </template>
    </carrousel>
</iterator>
</code>
  * The output:
</webcode>


===== Syntax =====

<code dw>
<carrousel element-width="..." control="all|none">
</carrousel>
</code>
where:
  * ''element-width'' is the minimum [[docs:styling:dimension|width]] of an element on the screen. By default, this is 100% (meaning that there is only one element)
  * ''control'' manages the control elements. If ''none'', no arrow buttons or bullets are shown.
===== Support =====

==== Lazy Loading ====
[[docs:performance:lazy|Lazy loading]] works on modern browser where the [[https://caniuse.com/?search=loading|loading attribute is supported]].