---json
{
   "canonical":"page-explorer",
   "shortname":"Page explorer"
}
---

====== ComboStrap UI - Page Explorer  ======



===== About =====
A ''page-explorer'' is a [[docs:navigation:navigation|navigational component]] that creates a navigation pane in the form of:
  * a list 
  * or clickable levels of folder hierarchy


This component is mostly used in a [[docs:layout:page:side_slot|side slot]] or [[docs:layout:page:sidekick_slot|sidekick slot]]


===== Articles Related =====
{{backlinks>.}}

===== Syntax =====

<code dw>
<page-explorer type ns="namespacePath">
  <page>$path - $title</page>
  <namespace>$path - $title</namespace>
  <home>$path - $title</home>
  <parent>$path - $title</parent>
</page-explorer>
</code>
where:
  * the attributes are:
      * [[docs:styling:type|type]] that defines the layout and may be one of this two value:
          * [[#list|list]] to create a list navigation pane (the default)
          * [[#tree|tree]] to create a tree navigation pane
      * ''ns'' that defines the ''namespace''. The default  value is the namespace of:
          * the rendered page for a [[#list]]
          * the physical page for a [[#tree]].
  * the sub-element are:
    * ''page'' defines a [[docs:utility:template|template]] for each page in the namespace
    * ''home'' defines a [[docs:utility:template|template]] for the home page of the namespace
    * ''namespace'' defines a [[docs:utility:template|template]] for each child namespace of the actual namespace 
    *  ''parent'' defines a [[docs:utility:template|template]] for the parent namespace of the actual namespace (used only in the [[#list|list layout]])
  


<note >
  * if the ''home'' tag:
      * is defined without any template (ie empty content), the ''home'' section is not shown
      * is not defined, the ''page'' template is used instead
  * ''page-explorer'', ''home'', ''page'', ''parent'' and ''namespace'' are all [[docs:marki|superset HTML component]].
</note>


===== Example =====

==== List ====
The below image shows you the mapping between the tag and their location in a ''list''  layout.

{{docs:block:page-explorer-list-name-to-ui-region.png|}}

<webcode name="Default" frameborder=0 width=100% scrolling=yes externalResources="," renderingMode=story >
<code dw>
<page-explorer color="blue" height="250px" width="400" scroll="toggle">
    <parent>[[$path?underline=false|<icon name="arrow-up-box"/> ... <pipeline>"$h1" | cut("-","2-") | trim()</pipeline>]]</parent>
    <page>[[$path?underline=false|<icon name="file"/> <pipeline>"$h1" | cut("-","2-") | trim()</pipeline>]]</page>
</page-explorer>
</code>
where the ''page'' template is composed of:
  * an [[docs:content:icon|icon]]
  * a [[docs:content:link|link]] without [[docs:styling:underline|underline]]
  * and a [[docs:utility:pipeline|pipeline]] to modify the [[docs:semantic:h1|heading 1]] of the page.
</webcode>

==== Collapsible Tree ====

The below image shows you the mapping between the tag and their location in a tree layout.

{{docs:block:page-explorer-tree-name-to-ui-region.png|}}


Example:

<webcode name="Default">
<code dw>
<page-explorer tree ns=":docs">
    <home>[[$path|<icon name="home" color="#0000004d" width="20"/> Overview]]</home>
    <ns><pipeline>"$h1" | cut("-","2-") | trim() </pipeline></ns>
    <page>[[$path|<icon name="file" color="#0000004d" width="20"/>  <pipeline>"$h1" | cut("-","2-") | trim() </pipeline>]]</page>
</page-explorer>
</code>
where the ''page'' template is composed of:
  * an [[docs:content:icon|icon]]
  * a [[docs:content:link|link]]
  * and a [[docs:utility:pipeline|pipeline]] to modify the [[docs:semantic:h1|heading 1]] of the page.

It produces:
</webcode>



===== Support =====

==== Performance consideration with the tree pane ====
The [[#tree|page-explorer tree]] is recreated every time that a subpage is modified. If your tree has a lot of page, it may perform poorly:
  * while editing 
  * and for the first viewer




