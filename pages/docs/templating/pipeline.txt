---json
{
    "page_id": "x8speed0rna8y7lqsocge"
}
---

====== ComboStrap UI - Pipeline ======


===== About =====
A ''pipeline'' is a element that contains a list of function (called a ''pipeline'') that transforms successively a string.


<note>
''Pipeline'' are used in [[docs:templating:template|template]] when you want to transform a variable such as a page title. 
</note>


===== Syntax =====

<code dw>
<pipeline> value | function | function | ... </pipeline>
</code>
where:
  * ''value'' is the string to transform or a [[docs:templating:template#variable|template variable]]
  * ''function'' is one of:
      * [[#capitalize]] - make the first letter of each word a capital letter (ie uppercase letter)
      * [[#cut]] - cut the string in parts and return one
      * [[#head]] - return the first characters
      * [[#replace]] -  replace a string
      * [[#rconcat]] - add a string at the right side
      * [[#trim]] - delete any space before and after

===== Functions =====


==== Capitalize ====
''capitalize'' is a function that will make the first letter of each word an uppercase letter (ie capital letter)

**Syntax**:
<code>
capitalize()
</code>

Example:
<webcode name="capitalize" frameborder=0 >
<code dw>
<pipeline> "hello foo  bar" | capitalize() </pipeline>
</code>
Output:
</webcode>


==== Cut ====
''cut'' is a function that will split the string in parts and returned the asked part concatenated. If the separator is not found, the original string is returned

**Syntax**:
<code>
cut("separator",selector)
</code>
where:
  * ''separator'' can be a simple character or a regular expression.
  * ''selector'' is a token selection in the form ''x[-y]'' where:
      * ''x'' is the first token to select
      * ''-'' will select also the next tokens (optional, if not set only one token is returned)
      * ''y'' is the last token to select (optional, by default, the last one)

Example:
  * Range Token Selection. Select all token from the second
<webcode name="cut" frameborder=0 >
<code dw>
<pipeline> "Hello - Foo - Bar" | cut("-","2-") </pipeline>
</code>
Output:
</webcode>
  * Single Token Selection. Select only the second token
<webcode name="cut" frameborder=0 >
<code dw>
<pipeline> "Hello - Foo - Bar" | cut("-",2) </pipeline>
</code>
Output:
</webcode>
  * If the separator is not found, the function has not effect on the given string.
<webcode name="cut" frameborder=0 >
<code dw>
<pipeline> "Hello World" | cut("-",2) </pipeline>
</code>
Output:
</webcode>


==== Head ====
''head'' is a function that will take the first N characters of a string.

**Syntax**:
<code>
head($length, $tail)
</code>
where:
  * ''length'' is the maximal length of the output string
  * ''tail'' is an optional string that is added if the input string was cut

For instance:
<webcode name="rconcat" frameborder=0 >
<code dw>
<pipeline> "Long Title that we want to cut" | head(10 , "...") </pipeline>
</code>
Output:
</webcode>



==== Rconcat ====
''rconcat'' is a function that will concatenate a string to the right

**Syntax**:
<code>
rconcat($string)
</code>

For instance:
<webcode name="rconcat" frameborder=0 >
<code dw>
<pipeline> "Title" | rconcat("...") </pipeline>
</code>
Output:
</webcode>

==== Replace ====
''replace'' is a function that will search a string and replace it.

**Syntax**:
<code>
replace($search, $replace)
</code>

For instance:
<webcode name="Replace" frameborder=0 >
<code dw>
<pipeline> "Prefix - Title" | replace("Prefix - ","") </pipeline>
</code>
Output:
</webcode>


==== Trim ====
''trim'' is a function that strip whitespace from the beginning and end of a string

**Syntax**:
<code>
trim()
</code>

For instance:
<webcode name="cut" frameborder=0 >
<code dw>
<pipeline> "Hello World   " | trim() </pipeline>
</code>
Output:
</webcode>